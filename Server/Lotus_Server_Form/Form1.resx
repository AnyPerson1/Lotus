<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAfHh3/Hh4d/x4eHf8dHR3/Hh4d/x4eHf8eHh3/Hh8d/x4fHf8eHx3/Hh4d/x4fHf8eHx7/Hh8e/x4f
        Hv8eHx7/Hh8e/x4fHv8eHh3/Hh4d/x0dHf8dHR3/HR4d/x4eHv8eHh7/HR0d/x0dHf8eHh3/Hh4d/x4e
        Hv8eHx7/Hh8e/x4dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8eHh7/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x4eHv8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/Hh4e/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8eHh7/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR4g/x0eIf8dHiH/HR4h/x0eH/8dHR3/HR0d/x0dHf8dHR3/HR4f/x0e
        If8dHiH/HR4h/x0eIP8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x4eHv8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHv8eGRH/HhgM/x4YDf8eGAz/HhoU/x0dHv8dHR3/HR0d/x0d
        Hv8eGxX/HhgM/x4YDf8eGAz/HhoS/x0dHv8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/Hh4d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR7/HhwY/xg0Zv8VPoz/FTyD/xU/jf8ZLU//HhsW/x0d
        H/8dHR//HhsW/xssTP8VP4z/FTyE/xU/jf8YMmL/HhsX/x0dHv8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0e/x0cGv8cISv/Cl7s/wZm//8GY/z/Bmf//wxV
        0/8eHRr/HR0e/x0dHv8eHBv/DVXR/wVn//8GY/v/Bmb//wpb5f8dICb/HRwb/x0dHv8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x4eHv8eHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHiD/HhkQ/xkyYP8HY///B134/wde
        +v8HXvr/CF///xosS/8eGxX/HhsW/xorS/8IYf//B176/wde+v8HXfn/B2H//xgvWP8eGRH/HR4g/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/Hh4e/x4dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0eIP8eGQ7/EUak/wZj
        //8HXvz/B2D+/wde+/8GY///E0GU/x4ZEf8eGhH/FEGS/wZk//8HXvv/BmH+/whe/P8HY///EkOa/x8Z
        Dv8dHiH/HR0d/x0dHf8dHR3/HR0d/x0dHf8eHh7/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR7/HR0c/x0f
        Iv8LV9//BmL//wlc9P8OU9H/CGD//wZg//8LVdr/HR4e/x4dHv8NVtn/BmH//wZg//8NVNL/Clz1/wZi
        //8MVdj/Hh4e/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x4eHv8dHh3/HR0d/x0dHf8dHR3/HR0d/x0e
        H/8eGhL/GS1Q/wdh//8GYP//Cljm/xg0Zv8HYP//B179/wZh//8ZKkf/GilG/wdj//8HXv7/B2D+/xg0
        Z/8LWen/BmD//whg//8aK0j/HhoU/x0eH/8dHR3/HR0d/x0dHf8dHR3/Hh4e/x4dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR4h/x4YDf8TQJL/BmP//wZg//8LU9j/Hh8g/wxX2v8HYP//B2P//xJAlP8TQZP/BmT//wdg
        //8LVdr/HR8i/wxW3P8GYP//BmP//xQ+h/8fGA3/HR4h/x0dHf8dHR3/HR0d/x0dHf8eHh7/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/Hhwa/wxT0f8GYf//BmL//w5Nv/8gFgL/E0OZ/wZk//8GY///C1bg/wxY
        4P8FY///BWL//xJCmf8gFgT/Dk/B/wZi//8GYf//DlDI/x4bFv8dHR7/HR0d/x0dHf8dHR3/HR0d/x4e
        Hv8eHR3/HR0d/x0dHf8dHR3/HR4f/x4bFf8bKEH/CGD8/wde/P8FY///EkOb/yAWBP8ZLVH/Bmf//w9M
        uv8fJDH/HiQu/xFLtv8FZf//GS1S/x8WBP8TQ53/BmP//wde/f8IXfj/GyY5/x0bFv8dHR//HR0d/x0d
        Hf8dHR3/Hh4e/x4dHf8dHR3/HR0d/x0dHf8dHiD/HhgO/xY7fP8GZP//B134/wVl//8VN3X/HxcI/xwg
        KP8YMmT/FjuC/xRHpf8URaD/FTl9/xkxYv8cICj/HhcI/xY3c/8GZf//B135/wZj//8WOHT/HxkO/x0e
        IP8dHR3/HR0d/x0dHf8eHh7/Hh0d/x0dHf8dHR3/HR0d/x0eH/8eGhP/D069/wZj//8IXfj/C1nn/xso
        Pf8dISX/HiAk/xc0bP8HYPj/BmP//wVj//8HX/j/FzRr/x0gJP8dICX/Gyc9/wpZ6P8JXfj/B2L//w9L
        tv8eGhH/HR4g/x0dHf8dHR3/HR0d/x4eHv8eHR3/HR0d/x0dHf8dHR7/HRwY/xwjMP8KW+//BmD//wlb
        8v8SSK3/GTRk/w9PyP8JXPL/BGj//whd8P8JW/T/CVzz/wld7/8FaP//CVzy/w9Qyv8ZM2X/Ekmv/wpc
        8/8HYP//Clrr/xwiLP8dHBn/HR0e/x0dHf8dHR3/Hh4e/x0eHf8dHR3/HR0d/x0eIP8eGQ//FzJk/wdj
        //8IXfn/BWP//xFHpP8UQ5v/CGL//whd9f8SQpr/Fzl8/wle+v8IXvj/Fzp6/xNDmv8JXPX/BmH//xNC
        m/8SSKX/BmT//wdd+f8GYv//GDJf/x4ZEP8dHiD/HR0d/x0dHf8eHh7/Hh0d/x0dHf8dHR3/HR4g/x8Z
        D/8RSKr/BWT//wZe+v8FZP//GSxK/xwmOf8HZP//CF71/xJFpv8MVt7/CGD//wdf//8KVt7/EUam/wle
        9f8GY///GyU1/xosS/8GZP//Bl76/wVk//8RR6X/HxkP/x0eIP8dHR3/HR0d/x4eHv8eHR3/HR0d/x0d
        Hv8dHBv/HR8k/w5V1P8JXvP/CVzx/wxV3v8eHBv/FjVs/wtZ5P8UP5D/BmP9/wZm//8HY///BWT//wVm
        //8GY/3/FECU/wxZ5/8WM2n/HR0c/wxX3/8JXfH/CVz0/w5S0P8dHiD/HR0c/x0dHv8dHR3/Hh4e/x0d
        Hf8dHR3/HR0d/x0dHP8dHiD/HCIt/xwiLf8cIi7/HCEr/x8XCf8VOX3/E0aj/xwnPf8KW+//FTt//xNA
        kP8SQJH/FTqB/wtb7f8cJzv/Eken/xU5ef8fFwr/HSIr/xwiLv8cIi3/HCIt/x0eH/8dHRz/HR0d/x0d
        Hf8eHh7/HR0d/x0dHf8dHR3/HR0d/x0dHP8dHBn/HRwZ/x0cGf8dHR3/HhkR/xkxXP8QUcn/C1nm/xcy
        Y/8gFgT/HxkP/x8ZD/8gFgT/GDJm/wpY5v8OUMn/GC9Z/x4ZEf8dHR3/HRwZ/x0cGf8dHBn/HR0c/x0d
        Hf8dHR3/HR0d/x4eHv8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHv8dHR7/HR0e/x0dH/8dHBj/HSMv/wxa
        6/8XM2b/HxgL/x0fI/8dHiH/HR4h/x0fI/8fGAv/FjNq/wtY6v8dIiv/HRwZ/x0dH/8dHR7/HR0e/x0d
        Hv8dHR3/HR0d/x0dHf8dHR3/Hh4e/x0eHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        HP8dHiD/HSIt/x4aEv8dHiD/HR0d/x0dHf8dHR3/HR0d/x0eIP8eGhP/HSIu/x0dHv8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8eHh7/HR4d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHBn/HR4f/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0eH/8dHBn/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x4eHv8eHh3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHv8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hv8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/Hh4e/x0eHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8eHh7/Hh4d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x4e
        Hv8eHh3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0d
        Hf8dHR3/Hh4e/x8eHf8dHh3/HR4d/x0eHf8eHh3/HR4d/x0eHf8dHh3/HR0d/x0dHf8dHh3/HR4d/x0e
        Hf8dHR3/HR0d/x0dHf8dHR3/HR0d/x0eHf8dHh3/HR4d/x0eHf8dHh3/HR4d/x0eHf8dHh3/HR4d/x0e
        Hf8dHh3/Hh4d/x4fHf8eHh7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>